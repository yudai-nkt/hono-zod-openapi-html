diff --git a/node_modules/@hono/zod-openapi/dist/index.d.ts b/node_modules/@hono/zod-openapi/dist/index.d.ts
index 1870881..5794c8a 100644
--- a/node_modules/@hono/zod-openapi/dist/index.d.ts
+++ b/node_modules/@hono/zod-openapi/dist/index.d.ts
@@ -69,8 +69,8 @@ declare class OpenAPIHono<E extends Env = Env, S extends Schema = {}, BasePath e
     openapi: <R extends RouteConfig, I extends Input = InputTypeBase<R, "params", "param"> & InputTypeBase<R, "query", "query"> & InputTypeBase<R, "headers", "header"> & InputTypeBase<R, "cookies", "cookie"> & InputTypeForm<R> & InputTypeJson<R>, P extends string = ConvertPathType<R["path"]>>(route: R, handler: Handler<E, P, I, HandlerResponse<OutputType<R>>>, hook?: Hook<I, E, P, OutputType<R>> | undefined) => OpenAPIHono<E, S & ToSchema<R["method"], P, I["in"], OutputType<R>>, BasePath>;
     getOpenAPIDocument: (config: OpenAPIObjectConfig) => openapi3_ts_oas30.OpenAPIObject;
     getOpenAPI31Document: (config: OpenAPIObjectConfig) => openapi3_ts_oas31.OpenAPIObject;
-    doc: (path: string, config: OpenAPIObjectConfig) => void;
-    doc31: (path: string, config: OpenAPIObjectConfig) => void;
+    doc: (path: string, config: OpenAPIObjectConfig) => this;
+    doc31: (path: string, config: OpenAPIObjectConfig) => this;
     route<SubPath extends string, SubEnv extends Env, SubSchema extends Schema, SubBasePath extends string>(path: SubPath, app: Hono<SubEnv, SubSchema, SubBasePath>): OpenAPIHono<E, MergeSchemaPath<SubSchema, MergePath<BasePath, SubPath>> & S, BasePath>;
     route<SubPath extends string>(path: SubPath): Hono<E, RemoveBlankRecord<S>, BasePath>;
     basePath<SubPath extends string>(path: SubPath): OpenAPIHono<E, S, MergePath<BasePath, SubPath>>;
diff --git a/node_modules/@hono/zod-openapi/dist/index.js b/node_modules/@hono/zod-openapi/dist/index.js
index 20325f2..c8a39b1 100644
--- a/node_modules/@hono/zod-openapi/dist/index.js
+++ b/node_modules/@hono/zod-openapi/dist/index.js
@@ -72,12 +72,14 @@ var OpenAPIHono = class _OpenAPIHono extends Hono {
       const document = this.getOpenAPIDocument(config);
       return c.json(document);
     });
+    return this
   };
   doc31 = (path, config) => {
     this.get(path, (c) => {
       const document = this.getOpenAPI31Document(config);
       return c.json(document);
     });
+    return this
   };
   route(path, app) {
     super.route(path, app);
